apiVersion: apps/v1
kind: Deployment
metadata:
  name: rrs-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rrs-api
  template:
    metadata:
      labels:
        app: rrs-api
    spec:
      serviceAccountName: rrs-reader
      containers:
      - name: rrs-api
        image: library/infofetch:1.0.5
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: k8s-api-access
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
      volumes:
      - name: k8s-api-access
        projected:
          sources:
          - serviceAccountToken:
              path: token
          - configMap:
              name: kube-root-ca.crt
              items:
              - key: ca.crt
                path: ca.crt

---
apiVersion: v1
kind: Service
metadata:
  name: rrs-api
spec:
  selector:
    app: rrs-api
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      # nodePort: 30090
  type: ClusterIP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rrs-reader
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rrs-role
  namespace: default
rules:
- apiGroups: [""]
  resources: ["nodes", "pods", "services"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: rrs-rolebinding
  namespace: default
subjects:
- kind: ServiceAccount
  name: rrs-reader
  namespace: default
roleRef:
  kind: ClusterRole
  name: rrs-role
  apiGroup: rbac.authorization.k8s.io